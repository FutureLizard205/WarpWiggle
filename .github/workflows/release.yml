name: Release

on:
  release:
    types:
      - published

jobs:
  publish:
    name: Publish for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write

    strategy:
      # Set fail-fast to false in order to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      # Set up a matrix to run the following configurations:
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc]
        sdl_version: [2.28.5]
        sdl_image_version: [2.8.2]

    steps:
    - uses: actions/checkout@v3

    - name: Download libraries (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install libsdl2-dev libsdl2-image-dev

    - name: Download libraries (Windows)
      if: runner.os == 'Windows'
      run: |
        mkdir libraries
        cd libraries
        curl -OL https://github.com/libsdl-org/SDL/releases/download/release-${{  matrix.sdl_version  }}/SDL2-devel-${{  matrix.sdl_version  }}-mingw.zip
        curl -OL https://github.com/libsdl-org/SDL_image/releases/download/release-${{  matrix.sdl_image_version  }}/SDL2_image-devel-${{  matrix.sdl_image_version  }}-mingw.zip
        7z x SDL2*.zip
        cd ..
        copy libraries/SDL2*/x86_64*/bin/*.dll include        

    - name: Configure CMake (Linux)
      if: runner.os == 'Linux'
      run: >
        cmake -B ${{ github.workspace }}/build
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}

    - name: Configure CMake (Windows)
      if: runner.os == 'Windows'
      run: |
        $workspacePath = "${{ github.workspace }}" -replace '\\', '/' 
        Write-Output "Variable Value: $workspacePath"
        cmake -B $workspacePath/build -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCMAKE_SDL2_MODULES_PATH="$workspacePath/cmake/sdl2" -DSDL2_PATH="$workspacePath/libraries/SDL2-${{  matrix.sdl_version  }}/x86_64-w64-mingw32" -DSDL2_IMAGE_PATH="$workspacePath/libraries/SDL2_image-${{  matrix.sdl_image_version  }}/x86_64-w64-mingw32" -S $workspacePath  -G "MinGW Makefiles"

    - name: Build
      # Build your program with the given configuration. Note that --config is needed because the default Windows generator is a multi-config generator (Visual Studio generator).
      run: cmake --build ${{ github.workspace }}/build --config ${{ matrix.build_type }}

    - name: Package (Linux, portable)
      if: runner.os == 'Linux'
      run: |
        cmake --install build --prefix ./
        mkdir output
        rsync -av --exclude='*.txt' --exclude='*.cmake' --exclude='Makefile' --exclude='CMakeFiles/' --exclude='Testing/' build/ output/
        chmod +x output/*
        cp -r include/* output/
        cd output
        7z a -mm=Deflate -mfb=128 -mpass=10 -mx=8 -tzip package.zip .
        cd ..

    - name: Package (Windows, portable)
      if: runner.os == 'Windows'
      run: |
        cmake --install build --prefix ./
        mkdir output
        move build/*.exe output/
        xcopy /S /I /E include output\
        cd output
        7z a -mm=Deflate -mfb=128 -mpass=10 -mx=8 -tzip package.zip .
        cd ..

    - name: Upload to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        asset_name: ${{ github.event.repository.name }}_v$tag-${{ runner.os }}-${{ matrix.c_compiler }}-portable.zip
        file: output/package.zip
        tag: ${{ github.ref }}
